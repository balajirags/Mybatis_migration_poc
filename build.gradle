loadConfiguration()

def loadConfiguration() {
            def environment = ext.has('env') ? env : 'dev'
            def database_file = "database_"+environment+".properties"
            ext.set('environment', environment)
            println "Environment is set to $environment"
            /*println "Environment is"+ ext.get('environment')
            def configFile = file('src/main/resources/database_'+environment+'.properties')
            Properties props = new Properties()
            props.load(new FileInputStream(configFile))
            project.ext['flyway.user']= props['user']
            project.ext['flyway.password']=props['password']
            project.ext['flyway.url']=props['url']
            project.ext['flyway.driver']=props['driver']*/
}


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.5.RELEASE")
        classpath 'postgresql:postgresql:9.1-901-1.jdbc4'
        classpath "com.github.marceloemanoel:gradle-migrations:0.2.1"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "migrations"


dependencies {
    migrationsDriver 'postgresql:postgresql:9.1-901-1.jdbc4'
}

migrations {
    baseDir = "./src/main/resources"
    force = true
}

jar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    compile("org.springframework.boot:spring-boot-starter-jdbc")

    compile("org.postgresql:postgresql:9.2-1003-jdbc4")

    compile('com.google.code.gson:gson:2.2.+')

    testCompile("junit:junit")
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}


